"use client";
import React, { useEffect, useState } from 'react';
import './Fireworks.css';

const Fireworks = () => {
  const [fireworks, setFireworks] = useState([]);

  // HÃ m Ä‘á»ƒ sinh phÃ¡o hoa ngáº«u nhiÃªn á»Ÿ vá»‹ trÃ­ ngáº«u nhiÃªn trÃªn mÃ n hÃ¬nh
  const generateFirework = () => {
    const x = Math.random() * window.innerWidth;
    const y = Math.random() * window.innerHeight;
    setFireworks((prevFireworks) => [
      ...prevFireworks,
      { x, y, id: Math.random().toString(36).substr(2, 9) },
    ]);
  };

  useEffect(() => {
    // Táº¡o hiá»‡u á»©ng phÃ¡o hoa tá»± Ä‘á»™ng má»—i 800ms
    const interval = setInterval(generateFirework, 800);

    // Cleanup interval khi component bá»‹ unmount
    return () => clearInterval(interval);
  }, []);

  return (
    <div className="fireworks-container">
      {fireworks.map((firework) => (
        <div
          key={firework.id}
          className="firework"
          style={{ top: firework.y, left: firework.x }}
          onAnimationEnd={() =>
            setFireworks((prevFireworks) =>
              prevFireworks.filter((fw) => fw.id !== firework.id)
            )
          }
        >
          {createFireworkLogic()}
          </div>
      ))}
    </div>
  );
};
const createFireworkLogic = () => {
  const sparks = Array.from({ length: 9 }); // Giáº£ sá»­ má»—i phÃ¡o hoa cÃ³ 20 tia sÃ¡ng
  return sparks.map((_, index) => (
    <div
      key={index}
      className="spark"
      style={{
        animationDelay: `${Math.random() * 0.5}s`,
        transform: `rotate(${(index / 9) * 360}deg) translateY(50px)`,
      }}
    >
      ðŸŒ¸
    </div>
  ));
};



export default Fireworks;
